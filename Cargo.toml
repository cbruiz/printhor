[package]
authors = ["Carlos Barrales Ruiz <cbruiz@gmail.com>"]
edition = "2021"
name = "prinThor"
version = "0.0.4"
license = "MIT"
readme = "README.md"
repository = "https://github.com/cbruiz/printhor"
documentation = "https://docs.rs/printhor"

description = "The highly reliable but not necessarily functional 3D Printer firmware"
exclude = [
    "datasheets", "design", "package-publish-trick"
]

[badges.maintenance]
status = "experimental"

[features]
nightly = ["embassy-executor/nightly", "printhor-hwa-common/nightly", "printhor-hwi_skr_mini_e3?/nightly", "printhor-hwi_mks_robin_nano?/nightly", "printhor-hwi_nucleo_64_arduino_cnc_hat?/nightly", "printhor-hwi_rp_2040?/nightly"]
verbose-timings = ["printhor-hwi_native?/verbose-timings", "printhor-hwi_skr_mini_e3?/verbose-timings", "printhor-hwi_mks_robin_nano?/verbose-timings", "printhor-hwi_nucleo_64_arduino_cnc_hat?/verbose-timings", "printhor-hwi_rp_2040?/verbose-timings"]
# A specific hack to verify motion distances match the expectations
assert-motion = []
# Highly convenient for development. Meaning any other build needs to be like: cargo [...] --no-default-features
default = ["native"]

# Hardware device features

with-defmt = ["defmt", "defmt-rtt", "panic-probe", "printhor-hwa-common/with-defmt", "printhor-hwa-utils/with-defmt", "printhor-hwi_rp_2040?/with-defmt", "printhor-hwi_nucleo_64_arduino_cnc_hat?/with-defmt"]
with-log = ["printhor-hwa-common/with-log", "printhor-hwa-utils/with-log", "printhor-hwi_native/with-log"]
with-serial-usb = ["printhor-hwa-common/with-serial-usb", "printhor-hwa-common/with-serial-usb"]
with-serial-port-1 = ["printhor-hwa-common/with-serial-port-1", "printhor-hwi_native?/with-serial-port-1"]
with-serial-port-2 = ["printhor-hwa-common/with-serial-port-2", "printhor-hwi_native?/with-serial-port-2"]
with-print-job = ["printhor-hwi_native?/with-print-job"]
with-spi = ["embedded-hal", "printhor-hwi_native?/with-spi"]
with-hot-end = ["embedded-hal", "printhor-hwa-common/with-hot-end", "printhor-hwi_native?/with-hot-end"]
with-hot-bed = ["embedded-hal", "printhor-hwa-common/with-hot-bed", "printhor-hwi_native?/with-hot-bed"]
with-motion = ["printhor-hwa-common/with-motion", "printhor-hwi_native?/with-motion"]
with-probe = ["embedded-hal", "printhor-hwi_native?/with-probe"]
with-endstops = []
with-sdcard = ["embedded-sdmmc", "printhor-hwi_native?/with-sdcard"]
with-fan-layer = ["embedded-hal", "printhor-hwi_native?/with-fan-layer"]
with-fan-extra-1 = ["embedded-hal", "printhor-hwi_native?/with-fan-extra-1"]
with-laser = ["embedded-hal", "printhor-hwi_native?/with-laser"]
with-trinamic = ["tmc2209", "printhor-hwi_native?/with-trinamic"]
# Dropped at since https://github.com/cbruiz/printhor/tree/4519dea604030e82b978e658474a44176b0735ea We will get back to that feature after
with-display = ["printhor-hwi_native?/with-display"]
with-ps-on = ["printhor-hwi_native?/with-ps-on"]

without-bootloader = []
numerical-robusticity-check = []
trace-commands = []

cornering = []
# Incomplete
pulsed = []
# Tests which are not yet working or completed :-/
wip-tests = []

grbl-compat = []

with-x-axis = ["printhor-hwa-common/with-x-axis", "printhor-hwi_native?/with-x-axis", "printhor-hwi_skr_mini_e3?/with-x-axis", "printhor-hwi_mks_robin_nano?/with-x-axis", "printhor-hwi_nucleo_64_arduino_cnc_hat?/with-x-axis", "printhor-hwi_rp_2040?/with-x-axis"]
with-y-axis = ["printhor-hwa-common/with-y-axis", "printhor-hwi_native?/with-y-axis", "printhor-hwi_skr_mini_e3?/with-y-axis", "printhor-hwi_mks_robin_nano?/with-y-axis", "printhor-hwi_nucleo_64_arduino_cnc_hat?/with-y-axis", "printhor-hwi_rp_2040?/with-y-axis"]
with-z-axis = ["printhor-hwa-common/with-z-axis", "printhor-hwi_native?/with-z-axis", "printhor-hwi_skr_mini_e3?/with-z-axis", "printhor-hwi_mks_robin_nano?/with-z-axis", "printhor-hwi_nucleo_64_arduino_cnc_hat?/with-z-axis", "printhor-hwi_rp_2040?/with-z-axis"]
with-e-axis = ["printhor-hwa-common/with-e-axis", "printhor-hwi_native?/with-e-axis", "printhor-hwi_skr_mini_e3?/with-e-axis", "printhor-hwi_mks_robin_nano?/with-e-axis", "printhor-hwi_nucleo_64_arduino_cnc_hat?/with-e-axis", "printhor-hwi_rp_2040?/with-e-axis"]

# Wheter motion task is preemtive (takes exclusively the CPU when driving segments) or not
# The optimal case is NOT preemtive, but MCU must be powerful enough to provide very short response times.
# Otherwise, there will be lagging and hence yanks in motion kinematics
motion-async-task-exclusive = []
# Debug trick for testing timings with digital probe. Enable is threated as reference output clock.
debug-skip-homing = []
debug-signals = ["printhor-hwi_nucleo_64_arduino_cnc_hat?/debug-signals"]

cooperative = [
    "printhor-hwi_mks_robin_nano?/cooperative",
    "printhor-hwi_nucleo_64_arduino_cnc_hat?/cooperative",
    "printhor-hwi_skr_mini_e3?/cooperative",
    "printhor-hwi_rp_2040?/cooperative",
]

sdcard-uses-spi = []
adc-is-async = []
trinamic-uart-multi-channel = []
enable_vrefint-with-delay = []
without-vref-int = []
bypass-hotend = []
bypass-hotbed = []

ili9341_parallel = []
ili9341_spi = []

integration-test = [
    "cornering",
    "integration-test-m100",
    "integration-test-power-on",
    "integration-test-homing",
    "integration-test-reset-pos",
    "integration-test-move-ortho",
    "integration-test-move-oblique",
    "integration-test-move-boundaries",
    "integration-test-trinamic",
    #"integration-test-benchy",
    "integration-test-pen",
    "integration-test-laser-engrave",
    #"plot-timings",
    #"debug-skip-homing",
    #"numerical-robusticity-check",
    #"verbose-timings",
    "trace-commands",
    #"assert-motion",
    "native",
]
integration-test-m100 = []
integration-test-power-on = []
integration-test-homing = []
integration-test-reset-pos = []
integration-test-move-ortho = []
integration-test-move-oblique = []
integration-test-dwell = []
integration-test-set-hotend-temp = []
integration-test-laser-engrave = []
integration-test-benchy = []
integration-test-pen = []
integration-test-move-boundaries = []
integration-test-move-boundaries-1 = []
integration-test-trinamic = []

fixed-point-128-impl = []
float-point-f32-impl = []
float-point-f64-impl = []

# baremetal
std = []
arch-std = []
_arch = []

plot-timings = []
plot-motion-plan = ["gnuplot"]

#################
#### BOARDS #####
#################

native = [

    "with-log",

    "with-trinamic", "trinamic-uart-multi-channel",
    "with-motion",
    "with-serial-port-1",
    "with-serial-port-2",
    #"with-spi", #WIP
    "with-sdcard",
    "with-print-job",
    "with-probe",
    "with-hot-end",
    "with-hot-bed",
    "with-fan-layer",
    "with-fan-extra-1",
    "with-laser",
    "with-ps-on",

    "float-point-f32-impl",
    #"float-point-f64-impl",
    #"fixed-point-128-impl",

    "with-x-axis", "with-y-axis", "with-z-axis", "with-e-axis",

    #"plot-motion-plan",
    #"itertools",
    "printhor-hwi_native",
    "embassy-executor/arch-std", "embassy-sync/std", "embassy-time/std",
]

#################
####        #####
#################

mks_robin_nano = [
    #"nightly",
    "cornering",
    "cooperative",
    "without-bootloader", "printhor-hwi_mks_robin_nano/without-bootloader", # SHOULD NOT
    "with-defmt", "printhor-hwi_mks_robin_nano/with-defmt",
    "with-trinamic", "trinamic-uart-multi-channel", "printhor-hwi_mks_robin_nano/with-trinamic",
    "with-motion", "printhor-hwi_mks_robin_nano/with-motion",
    "with-x-axis", "with-y-axis", "with-z-axis", "with-e-axis",

    "with-serial-usb", "printhor-hwi_mks_robin_nano/with-serial-usb",
    "with-serial-port-1", "printhor-hwi_mks_robin_nano/with-serial-port-1",
    #"with-serial-port-2", "printhor-hwi_mks_robin_nano/with-serial-port-2", # Not implemented
    "with-spi", "printhor-hwi_mks_robin_nano/with-spi",
    "with-sdcard", "sdcard-uses-spi", "printhor-hwi_mks_robin_nano/with-sdcard", "printhor-hwi_mks_robin_nano/sdcard-uses-spi",
    "with-print-job", "printhor-hwi_mks_robin_nano/with-print-job",
    "with-probe", "printhor-hwi_mks_robin_nano/with-probe",
    "with-hot-end", "printhor-hwi_mks_robin_nano/with-hot-end",
    "with-hot-bed", "printhor-hwi_mks_robin_nano/with-hot-bed",
    "with-fan-layer", "printhor-hwi_mks_robin_nano/with-fan-layer",
    #"with-laser", "printhor-hwi_mks_robin_nano/with-laser",
    "with-ps-on", "printhor-hwi_mks_robin_nano/with-ps-on",

    "float-point-f32-impl",
    #"float-point-f64-impl",
    #"fixed-point-128-impl",

    "printhor-hwi_mks_robin_nano", "embassy-executor/executor-thread", "cortex-m-rt",
]

#################
####        #####
#################

nucleo64-l476rg = [
    "cornering",
    #"nightly",
    #"executor-interrupt",
    "cooperative",
    "with-x-axis", "with-y-axis", "with-z-axis",
    "with-defmt",
    "with-motion", "printhor-hwi_nucleo_64_arduino_cnc_hat/with-motion",
    "with-serial-usb", "printhor-hwi_nucleo_64_arduino_cnc_hat/with-serial-usb", # Useless Nucleo64 attachs USART2 # Not working either
    "with-serial-port-1", "printhor-hwi_nucleo_64_arduino_cnc_hat/with-serial-port-1",
    #"with-spi", "printhor-hwi_nucleo_64_arduino_cnc_hat/with-spi",
    #"with-sdcard", "sdcard-uses-spi", "printhor-hwi_nucleo_64_arduino_cnc_hat/with-sdcard", "printhor-hwi_nucleo_64_arduino_cnc_hat/sdcard-uses-spi",
    #"with-print-job", "printhor-hwi_nucleo_64_arduino_cnc_hat/with-print-job",
    "with-probe", "printhor-hwi_nucleo_64_arduino_cnc_hat/with-probe",
    "with-hot-end", "printhor-hwi_nucleo_64_arduino_cnc_hat/with-hot-end", # CNC Hat does not have it
    "with-hot-bed", "printhor-hwi_nucleo_64_arduino_cnc_hat/with-hot-bed", # CNC Hat does not have it
    "with-fan-layer", "printhor-hwi_nucleo_64_arduino_cnc_hat/with-fan-layer",
    #"with-laser", "printhor-hwi_nucleo_64_arduino_cnc_hat/with-laser",
    "with-ps-on", "printhor-hwi_nucleo_64_arduino_cnc_hat/with-ps-on",

    "enable_vrefint-with-delay",

    "float-point-f32-impl",
    #"float-point-f64-impl",
    #"fixed-point-128-impl",

    "printhor-hwi_nucleo_64_arduino_cnc_hat/nucleo64-l476rg",
]

nucleo64-f410rb = [
    "cornering",
    "cooperative",
    "with-x-axis", "with-y-axis", "with-z-axis",
    "debug-signals",
    "trace-commands",

    #"verbose-timings",
    "with-defmt",
    "with-motion", "printhor-hwi_nucleo_64_arduino_cnc_hat/with-motion",
    #"with-serial-usb", "printhor-hwi_nucleo_64_arduino_cnc_hat/with-serial-usb", # Useless Nucleo64 attachs USART2. Broken nevertheless
    "with-serial-port-1", "printhor-hwi_nucleo_64_arduino_cnc_hat/with-serial-port-1",
    #"with-spi", "printhor-hwi_nucleo_64_arduino_cnc_hat/with-spi",
    #"with-sdcard", "sdcard-uses-spi", "printhor-hwi_nucleo_64_arduino_cnc_hat/with-sdcard", "printhor-hwi_nucleo_64_arduino_cnc_hat/sdcard-uses-spi",
    #"with-print-job", "printhor-hwi_nucleo_64_arduino_cnc_hat/with-print-job",
    #"with-probe", "printhor-hwi_nucleo_64_arduino_cnc_hat/with-probe",
    #"with-hot-end", "printhor-hwi_nucleo_64_arduino_cnc_hat/with-hot-end", # CNC Hat does not have it
    #"with-hot-bed", "printhor-hwi_nucleo_64_arduino_cnc_hat/with-hot-bed", # CNC Hat does not have it
    #"with-fan-layer", "printhor-hwi_nucleo_64_arduino_cnc_hat/with-fan-layer",
    #"with-laser", "printhor-hwi_nucleo_64_arduino_cnc_hat/with-laser",
    #"with-ps-on", "printhor-hwi_nucleo_64_arduino_cnc_hat/with-ps-on",

    "float-point-f32-impl",
    #"float-point-f64-impl",
    #"fixed-point-128-impl",

    "printhor-hwi_nucleo_64_arduino_cnc_hat/nucleo64-f410rb",
]

nucleo_64_arduino_cnc_hat = [
    "printhor-hwi_nucleo_64_arduino_cnc_hat", "embassy-executor/executor-thread", "cortex-m-rt"
]

#################
####        #####
#################

skr_mini_e3_v2 = [
    #"nightly",
    "cornering",
    #"executor-interrupt",
    "cooperative",
    "with-x-axis", "with-y-axis", "with-z-axis", "with-e-axis",
    #"printhor-hwi_skr_mini_e3/without-ringbuffer",
    #"without-bootloader", "printhor-hwi_skr_mini_e3/without-bootloader", # SHOULD NOT
    "with-motion", "printhor-hwi_skr_mini_e3/with-motion",
    "printhor-hwi_skr_mini_e3/without-ringbuffer",
    "with-spi", "printhor-hwi_skr_mini_e3/with-spi",
    "with-sdcard", "sdcard-uses-spi", "printhor-hwi_skr_mini_e3/with-sdcard", "printhor-hwi_skr_mini_e3/sdcard-uses-spi",
    "with-print-job", "printhor-hwi_skr_mini_e3/with-print-job",
    #"with-serial-usb", "printhor-hwi_skr_mini_e3/with-serial-usb",
    "with-serial-port-1", "printhor-hwi_skr_mini_e3/with-serial-port-1",
    "with-serial-port-2", "printhor-hwi_skr_mini_e3/with-serial-port-2",
    "with-trinamic", "printhor-hwi_skr_mini_e3/with-trinamic",
    #"with-laser", "printhor-hwi_skr_mini_e3/with-laser",
    "with-hot-end", "printhor-hwi_skr_mini_e3/with-hot-end",
    "with-hot-bed", "printhor-hwi_skr_mini_e3/with-hot-bed",
    "with-probe", "printhor-hwi_skr_mini_e3/with-probe",
    "with-fan-layer", "printhor-hwi_skr_mini_e3/with-fan-layer",
    "with-ps-on", "printhor-hwi_skr_mini_e3/with-ps-on",
    "without-vref-int",
    "adc-is-async",

    "float-point-f32-impl",
    #"float-point-f64-impl",
    #"fixed-point-128-impl",
    "with-defmt",

    "skr_mini_e3", "printhor-hwi_skr_mini_e3/skr_mini_e3_v2",
]
skr_mini_e3_v3 = [
    #"nightly",
    "cornering",
    #"executor-interrupt",
    "cooperative",
    "with-x-axis", "with-y-axis", "with-z-axis", "with-e-axis",
    #"printhor-hwi_skr_mini_e3/without-ringbuffer",
    #"without-bootloader", "printhor-hwi_skr_mini_e3/without-bootloader", # SHOULD NOT
    "with-motion", "printhor-hwi_skr_mini_e3/with-motion",
    "with-spi", "printhor-hwi_skr_mini_e3/with-spi",
    "with-sdcard", "sdcard-uses-spi", "printhor-hwi_skr_mini_e3/with-sdcard", "printhor-hwi_skr_mini_e3/sdcard-uses-spi",
    "with-print-job", "printhor-hwi_skr_mini_e3/with-print-job",
    #"with-serial-usb", "printhor-hwi_skr_mini_e3/with-serial-usb", # Broken with bootloader?
    #"with-serial-port-1", "printhor-hwi_skr_mini_e3/with-serial-port-1", # Broken
    "with-serial-port-2", "printhor-hwi_skr_mini_e3/with-serial-port-2",
    "with-trinamic", "printhor-hwi_skr_mini_e3/with-trinamic",
    #"with-laser", "printhor-hwi_skr_mini_e3/with-laser",
    "with-hot-end", "printhor-hwi_skr_mini_e3/with-hot-end",
    "with-hot-bed", "printhor-hwi_skr_mini_e3/with-hot-bed",
    "with-probe", "printhor-hwi_skr_mini_e3/with-probe",
    "with-fan-layer", "printhor-hwi_skr_mini_e3/with-fan-layer",
    "with-ps-on", "printhor-hwi_skr_mini_e3/with-ps-on",

    "enable_vrefint-with-delay",

    "float-point-f32-impl",
    #"float-point-f64-impl",
    #"fixed-point-128-impl",

    "with-defmt",
    "skr_mini_e3", "printhor-hwi_skr_mini_e3/skr_mini_e3_v3",
]

skr_mini_e3 = [
    "printhor-hwi_skr_mini_e3", "embassy-executor/executor-thread", "cortex-m-rt"
]

#################
####        #####
#################

tst-rp2040 = [
    #"nightly",
    "with-defmt",
    #"with-motion", "printhor-hwi_rp_2040/with-motion",
    #"with-ps-on", "printhor-hwi_rp_2040/with-ps-on",
    "with-serial-usb", "printhor-hwi_rp_2040/with-serial-usb",
    #"with-serial-port-1", "printhor-hwi_rp_2040/with-serial-port-1",
    #"with-serial-port-2", "printhor-hwi_rp_2040/with-serial-port-2",
    #"with-spi", "printhor-hwi_rp_2040/with-spi",
    #"with-sdcard", "sdcard-uses-spi", "printhor-hwi_rp_2040/with-sdcard", "printhor-hwi_rp_2040/sdcard-uses-spi",
    #"with-print-job", "printhor-hwi_rp_2040/with-print-job",
    #"with-probe", "printhor-hwi_rp_2040/with-probe",
    #"with-hot-end", "printhor-hwi_rp_2040/with-hot-end",
    #"with-hot-bed", "printhor-hwi_rp_2040/with-hot-bed",
    #"with-fan-layer", "printhor-hwi_rp_2040/with-fan-layer",
    #"with-laser", "printhor-hwi_rp_2040/with-laser",
    #"enable_vrefint-with-delay",

    "float-point-f32-impl",
    #"float-point-f64-impl",
    #"fixed-point-128-impl",

    "rp_2040",
    "printhor-hwi_rp_2040/tst-rp2040",
]

rp_2040 = [
    "printhor-hwi_rp_2040/without-uart-until_idle", "printhor-hwi_rp_2040/with-uart-buffered",
    "embassy-executor",
    "printhor-hwi_rp_2040",
    "cortex-m", "cortex-m-rt", "alloc-cortex-m",
]

#################
####  DEPS  #####
#################

[dependencies]
# Optional baremetal
defmt = {version = "0.3.8", optional = true, default-features = false, features = []}
panic-probe = { version = "0.3.2", features = ["print-defmt"], optional = true}
defmt-rtt = { version = "0.4.1", optional = true }

cortex-m = { version = "0.7.7", features = ["inline-asm"], optional = true }
cortex-m-rt = { version = "0.7.3", optional = true}
alloc-cortex-m = { version = "0.4.4", optional = true}
critical-section = {version = "1.1.2", default-features = false}

embassy-stm32 = { version = "0.1.0", default-features = false, features = [], optional = true }
embassy-executor = { version = "0.6.0", default-features = false, features = ["executor-thread"], optional = true }
embassy-sync = { version = "0.6.0", features = [] }
embassy-time = { version = "*", features = [] }
embassy-futures = { version = "0.1.1", features = [] }
embassy-embedded-hal = { version = "0.1.0", features = [], optional = true }
embassy-usb = { version = "*", features = [], optional = true }
embedded-sdmmc = { version = "0.8.0", default-features = false, optional = true }
embedded-hal = { version = "1.0.0", default-features = false, optional = true }
embedded-hal-02 = { package = "embedded-hal", version = "0.2.7", features = ["unproven", ] }

futures = { version = "0.3.17", default-features = false, features = [] }
futures-util = { version = "0.3", default-features = false, features = [] }
heapless = { version = "0.8", default-features = false, features = [] }

async-gcode = {version = "0.3", default-features = false, features=["parse-trailing-comment", "optional-value", "string-value", "parse-checksum"]}

strum = { version = "0.26.3", default-features = false, features = ["derive"] }

rust_decimal = { version = "1.35.0", default-features = false, features = ["maths", "serde-with-str"] }
rust_decimal_macros = { version = "1.34.2" }
pid = { version = "4.0.0", default-features = false, features = []}
num-traits = {version = "0.2.19", default-features = false, features = [] }
micromath = { version = "2.1.0", default-features = false, features = []}
embedded-io-async = {version = "0.6.1", default-features = false, features = []}

# Steppers
tmc2209 = { version = "0.2.2", optional = true }

# Common base
printhor-hwa-common = { version = "0.0", default-features = false, features = [] }
printhor-hwa-utils = { version = "0.0", default-features = false, features = [] }

# Boards
printhor-hwi_native = { version = "*", default-features = false, optional = true }
printhor-hwi_skr_mini_e3 = { version = "*", default-features = false, optional = true }
printhor-hwi_mks_robin_nano = { version = "*", default-features = false, optional = true }
printhor-hwi_nucleo_64_arduino_cnc_hat = { version = "*", default-features = false, optional = true }
printhor-hwi_rp_2040 = { version = "*", default-features = false, optional = true }

gnuplot = {version = "0.0.43", default-features = false, features=[], optional = true}
# Display
#lvgl = { version = "0.5.2", default-features = false, features =[], optional = true }
#embedded-graphics-core = {version = "0.4.0", optional = true }

### machinery

cstr_core = { version = "0.2.6", default-features = false, features = ["alloc"], optional = true }
bitflags = { version = "2.6.0", default-features = false, features = [] }

cfg-if = { version = "1.0.0", features = [] }
const_env = { version = "0.1" }

# For light and fast float parsing
#fast-float = { version = "0.2", default-features = false, features = [], path = "libs/fast-float"}
# For light and fast float formatting
lexical-core = {version = "1.0", default-features = false, features = ["write-floats"]}

[build-dependencies]
#proc-macro2 = "1.0."
cfg-if = "1.0.0"

[dev-dependencies]
futures-test = { version = "0.3"}
tmc2209 = { version = "0.2"}

[profile.dev]
codegen-units = 1
debug = 2
strip = false
incremental = false
debug-assertions = true
overflow-checks = true
#opt-level = "z" # disable to play with GDB
lto = true
panic = "unwind"

[profile.release]
codegen-units = 1
debug = 2
strip = false
incremental = false
debug-assertions = true
overflow-checks = true
opt-level = "z"
lto = "fat"
panic = "unwind"

[profile.release-opt]
inherits = "release"
codegen-units = 1
debug = 0
incremental = false
debug-assertions = false
overflow-checks = false
strip = false
opt-level = "z"
lto = "fat"
panic = "abort"

[patch.crates-io]

#async-gcode = { git = "https://github.com/cbruiz/async-gcode.git", branch = "feature/embedded-productivization" }
async-gcode = { path = "libs/async-gcode" }

printhor-hwa-common = { path = "printhor-hwa-common" }
printhor-hwa-utils = { path = "printhor-hwa-utils" }
printhor-hwi_native = { path = "hwi-boards/printhor-hwi_native" }
printhor-hwi_skr_mini_e3 = { path = "hwi-boards/printhor-hwi_skr_mini_e3" }
printhor-hwi_mks_robin_nano = { path = "hwi-boards/printhor-hwi_mks_robin_nano" }
printhor-hwi_nucleo_64_arduino_cnc_hat = { path = "hwi-boards/printhor-hwi_nucleo_64_arduino_cnc_hat" }
printhor-hwi_rp_2040 = {path = "hwi-boards/printhor-hwi_rp_2040"}

embassy-stm32 = { path = "libs/embassy/embassy-stm32" }
embassy-rp = { path = "libs/embassy/embassy-rp" }
embassy-executor = { path = "libs/embassy/embassy-executor" }
embassy-sync = { path = "libs/embassy/embassy-sync" }
embassy-time = { path = "libs/embassy/embassy-time" }
embassy-futures = { path = "libs/embassy/embassy-futures" }
embassy-embedded-hal = { path = "libs/embassy/embassy-embedded-hal" }
embassy-usb = { path = "libs/embassy/embassy-usb" }

#[workspace.vars]
# TBD

#[workspace]
#members = ["printhor-hwa-common", "printhor-hwa-utils", "s-plot"]